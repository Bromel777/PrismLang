contract (signature: Signature25519, transaction: Transaction, self: AssetBox) = {
  let rate = 2
  let lessBase = true
  let acceptableTokenId    = base58'5QCPz4eZAgT8DLAoZDSeouLMk1Kcf6DjJzrURiSV9U9'
  let intrinsicTokenId     = base58'11NDaGfSWVg9qjjPc4QjGYJL8ErvGRrmKGEW5FSMq3i'
  let requiredContractHash = base58'75Gs7HHUNnoEzsPgRRVABzQaC3UZVcayw9NY457Kx5p'

  def isReturnBox(bx: Box): Bool = {
    if (let assetBx: AssetBox = bx) {
      assetBx.tokenId == acceptableTokenId &&
      assetBx.contractHash == requiredContractHash
    } else false
  }

  if (let returnBox: AssetBox = transaction.outputs.filter(isReturnBox)[0]) {
    transaction.outputs.exists(lamb (bx: Box) = if (let assetBx: AssetBox = bx) {
      assetBx.tokenId == intrinsicTokenId &&
      assetBx.contractHash == requiredContractHash &&
      ((self.amount - returnBox.amount) / rate) >= assetBx.amount
    } else false)
  } else false
}